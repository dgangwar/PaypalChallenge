<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="43160" started-at="2013-09-29T18:32:35Z" finished-at="2013-09-29T18:33:18Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="43160" started-at="2013-09-29T18:32:35Z" finished-at="2013-09-29T18:33:18Z">
      <class name="test.loan.PayPalTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.loan.PayPalTest@74b23210]" name="beforeTest" is-config="true" duration-ms="8154" started-at="2013-09-30T00:02:35Z" finished-at="2013-09-30T00:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testamortizationSchedulePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.loan.PayPalTest@74b23210]" name="testamortizationSchedulePage" duration-ms="3740" started-at="2013-09-30T00:02:43Z" data-provider="Validdata" finished-at="2013-09-30T00:02:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testamortizationSchedulePage -->
        <test-method status="PASS" signature="testamortizationSchedulePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.loan.PayPalTest@74b23210]" name="testamortizationSchedulePage" duration-ms="2654" started-at="2013-09-30T00:02:47Z" data-provider="Validdata" finished-at="2013-09-30T00:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testamortizationSchedulePage -->
        <test-method status="PASS" signature="testamortizationSchedulePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.loan.PayPalTest@74b23210]" name="testamortizationSchedulePage" duration-ms="2221" started-at="2013-09-30T00:02:50Z" data-provider="Validdata" finished-at="2013-09-30T00:02:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testamortizationSchedulePage -->
        <test-method status="PASS" signature="testamortizationSchedulePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.loan.PayPalTest@74b23210]" name="testamortizationSchedulePage" duration-ms="10228" started-at="2013-09-30T00:02:52Z" data-provider="Validdata" finished-at="2013-09-30T00:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testamortizationSchedulePage -->
        <test-method status="PASS" signature="testamortizationSchedulePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.loan.PayPalTest@74b23210]" name="testamortizationSchedulePage" duration-ms="15638" started-at="2013-09-30T00:03:02Z" data-provider="Validdata" finished-at="2013-09-30T00:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testamortizationSchedulePage -->
        <test-method status="FAIL" signature="testforNegativeValues(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.loan.PayPalTest@74b23210]" name="testforNegativeValues" duration-ms="0" started-at="2013-09-30T00:03:18Z" data-provider="Invaliddata" finished-at="2013-09-30T00:03:18Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void test.loan.PayPalTest.testforNegativeValues(java.lang.String,java.lang.String,java.lang.String) requires a @DataProvider named : Invaliddata]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void test.loan.PayPalTest.testforNegativeValues(java.lang.String,java.lang.String,java.lang.String) requires a @DataProvider named : Invaliddata
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:265)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:414)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1383)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1075)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1180)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.TestNG.privateMain(TestNG.java:1338)
	at org.testng.TestNG.main(TestNG.java:1307)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testforNegativeValues -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.loan.PayPalTest@74b23210]" name="afterTest" is-config="true" duration-ms="510" started-at="2013-09-30T00:03:18Z" finished-at="2013-09-30T00:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.loan.PayPalTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
